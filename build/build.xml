<!--
 | Copyright 2008-2011 ThoughtWorks, Inc.
 |
 | Licensed under the Apache License, Version 2.0 (the "License");
 | you may not use this file except in compliance with the License.
 | You may obtain a copy of the License at
 |
 |     http://www.apache.org/licenses/LICENSE-2.0
 |
 | Unless required by applicable law or agreed to in writing, software
 | distributed under the License is distributed on an "AS IS" BASIS,
 | WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 | See the License for the specific language governing permissions and
 | limitations under the License.
 |
 | Initial Contributors:
 |   Håkan Råberg
 |   Manish Chakravarty
 |   Pavan K S
 +-->
<project name="twist-osgi-spike" default="dist">
	<path id="ant.tasks.classpath">
		<fileset dir="lib">
			<include name="*.jar" />
		</fileset>
	</path>

	<taskdef resource="net/sf/ant4eclipse/antlib.xml" classpathref="ant.tasks.classpath" />
	<taskdef resource="net/sf/antcontrib/antlib.xml" classpathref="ant.tasks.classpath" />

	<property file="build.developer.properties" />
	<property file="build.properties" />

	<pathconvert property="workspace.dir">
		<path location="${basedir}/.." />
	</pathconvert>
	<property name="target.eclipse.dir" value="${workspace.dir}/target-eclipse" />

	<property name="dist.dir" value="${workspace.dir}/dist" />
	<property name="dist.archive.dir" value="${dist.dir}/archive" />
	<property name="junit.output.dir" value="${workspace.dir}/reports" />

	<condition property="isMac">
		<os family="mac" />
	</condition>
	<condition property="extra.jvm.arg" value="-XstartOnFirstThread" else="-DstartOnFirstThread=false">
		<os family="mac" />
	</condition>
	<condition property="isWindows">
		<os family="windows" />
	</condition>
	<condition property="ant.script" value="ant.bat" else="ant">
		<os family="windows" />
	</condition>
	<condition property="hasWine">
		<available file="${wine.prefix}" />
	</condition>

	<property name="twist.driver.web.browser" value="mozilla" />

	<target name="init-svn.version" unless="svn.version">
		<exec executable="svn" output="${java.io.tmpdir}/svn.properties" dir="." failifexecutionfails="false">
			<arg value="info" />
		</exec>

		<loadproperties srcfile="${java.io.tmpdir}/svn.properties">
			<filterchain>
				<prefixlines prefix="svn." />
				<deletecharacters chars="\ " />
			</filterchain>
		</loadproperties>

		<property name="svn.version" value="${svn.LastChangedRev}" />
	</target>

	<target name="init" depends="init-svn.version">
		<mkdir dir="${dist.dir}" />
	</target>

	<target name="clean" depends="clean-dist">
		<all-plugins target="clean-bundle" />
	</target>

	<target name="build-bundle" depends="init">
		<buildPlugin destDir="${dist.dir}" projectName="${plugin.id}" packageAsJar="true" workspace="${workspace.dir}">
			<javacLibraryCompiler />
			<targetPlatform>
				<location dir="${target.eclipse.dir}/eclipse" />
			</targetPlatform>
		</buildPlugin>
	</target>

	<target name="-build-bundle" depends="init">
		<echo message="${plugin.id}" />
		<if>
			<and>
				<isset property="plugin.windowingsystem" />
				<isset property="plugin.operatingsystem" />
			</and>
			<then>
				<exec executable="${ant.script}" failonerror="true">
					<env key="ANT_OPTS" value="-Dosgi.ws=${plugin.windowingsystem} -Dosgi.os=${plugin.operatingsystem}" />
					<arg value="-Dplugin.id=${plugin.id}" />
					<arg value="build-bundle" />
				</exec>
			</then>
			<else>
				<antcall target="build-bundle" />
			</else>
		</if>
	</target>

	<target name="build-feature" depends="init">
		<all-plugins target="-build-bundle" />
	</target>

	<target name="clean-bundle">
		<if>
			<hasNature workspace="${workspace.dir}" projectName="${plugin.id}" nature="java" />
			<then>
				<getOutputpath property="output.dir" workspace="${workspace.dir}" projectName="${plugin.id}" />
				<delete dir="${output.dir}" />
			</then>
		</if>
	</target>

	<target name="clean-dist">
		<delete dir="${dist.dir}" />
	</target>

	<target name="dist" depends="clean-dist, build-feature">
		<property name="dist.jar.name" value="${outer.project}-full-${svn.version}.jar" />
		<property name="dist.jar" value="${dist.dir}/${dist.jar.name}" />

		<delete dir="${dist.archive.dir}" />
		<delete dir="${java.io.tmpdir}/${dist.jar.name}" />
		<mkdir dir="${dist.archive.dir}" />

		<unjar dest="${dist.archive.dir}">
			<fileset dir="${dist.dir}/plugins">
				<include name="${outer.project}_*.jar" />
			</fileset>
		</unjar>

		<copy todir="${dist.archive.dir}">
			<fileset dir="${target.eclipse.dir}">
				<exclude name="**/*.source_*.jar" />
				<exclude name=".*" />
			</fileset>
		</copy>
		<copy todir="${dist.archive.dir}/eclipse/plugins">
			<fileset dir="${dist.dir}/plugins">
				<include name="*.jar" />
				<exclude name="${outer.project}_*.jar" />
				<exclude name="*.test*.jar" />
			</fileset>
		</copy>

		<jar basedir="${dist.archive.dir}" destfile="${dist.jar}">
			<manifest>
				<attribute name="Main-Class" value="${main.class}" />
			</manifest>
		</jar>

		<echo message="" />
		<echo message="${dist.jar}" />
		
		<antcall target="smoke" />
	</target>

	<target name="all-tests" depends="build-feature">
		<delete dir="${junit.output.dir}" />
		<parallel>
			<antcall target="ie-wine" />
			<antcall target="ie" />
			<antcall target="mozilla" />
			<antcall target="safari" />
		</parallel>
		<antcall target="junitreport" />
		<antcall target="detect-failure" />
	</target>

	<target name="safari" if="isMac">
		<selenium-tests browser="safari" />
	</target>

	<target name="mozilla">
		<selenium-tests browser="mozilla" />
	</target>

	<target name="ie" if="isWindows">
		<selenium-tests browser="ie" />
	</target>

	<target name="ie-wine" if="hasWine" unless="isWindows">
		<wine-ant target="ie" />
	</target>

	<macrodef name="selenium-tests">
		<attribute name="browser" />
		<sequential>
			<property name="project.id" value="com.thoughtworks.twist.driver.web.selenium.test" />

			<getEclipseClasspath property="selenium.tests.classpath" workspace="${workspace.dir}" projectName="${project.id}" targetPlatformLocation="${target.eclipse.dir}/eclipse" runtime="true" />
			<getSourcepath property="src.path" workspace="${workspace.dir}" projectName="${project.id}" />

			<mkdir dir="${junit.output.dir}/@{browser}" />

			<junit printsummary="yes" failureproperty="failure" fork="true" forkmode="once">
				<classpath>
					<pathelement path="${selenium.tests.classpath}" />
					<pathelement location="${workspace.dir}/build/lib/junit.jar" />
				</classpath>

				<jvmarg value="${extra.jvm.arg}" />
				<jvmarg value="-Dtwist.driver.web.browser=@{browser}" />

				<formatter type="xml" />

				<batchtest todir="${junit.output.dir}/@{browser}">
					<fileset dir="${src.path}">
						<include name="**/corebased/*Test*.java" />
					</fileset>
				</batchtest>
			</junit>
		</sequential>
	</macrodef>

	<target name="smoke">
		<property name="project.id" value="com.thoughtworks.twist.driver.web.selenium.test" />

		<getSourcepath property="src.path" workspace="${workspace.dir}" projectName="${project.id}" />
		<getOutputpath property="bin.path" workspace="${workspace.dir}" projectName="${project.id}" />

		<mkdir dir="${junit.output.dir}/smoke" />

		<junit printsummary="yes" haltonfailure="true" fork="true" forkmode="once">
			<classpath>
				<pathelement location="${bin.path}" />
				<pathelement location="${dist.jar}" />
				<pathelement location="${workspace.dir}/build/lib/junit.jar" />
			</classpath>

			<jvmarg value="${extra.jvm.arg}" />
			<formatter type="xml" />

			<batchtest todir="${junit.output.dir}/smoke/">
				<fileset dir="${src.path}">
					<include name="**/smoke/*Test*.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="detect-failure">
		<loadfile property="failure" srcFile="${junit.output.dir}/TESTS-TestSuites.xml">
			<filterchain>
				<linecontainsregexp>
					<regexp pattern="&lt;(failure|error)" />
				</linecontainsregexp>
			</filterchain>
		</loadfile>
		<fail if="failure" message="Tests FAILED" />
	</target>

	<target name="junitreport">
		<junitreport todir="${junit.output.dir}">
			<fileset dir="${junit.output.dir}">
				<include name="**/TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${junit.output.dir}/html" />
		</junitreport>
	</target>

	<macrodef name="wine-ant">
		<attribute name="target" />
		<sequential>
			<pathconvert property="wine.ant.home" targetos="windows">
				<path location="${ant.home}" />
				<map from="" to="${wine.rootdrive}" />
			</pathconvert>
			<exec executable="wine" timeout="120000" error="/tmp/wine.stderr.ie" errorproperty="wine.failed">
				<env key="WINEPREFIX" value="${wine.prefix}" />
				<arg value="java" />
				<arg value="-cp" />
				<arg value="${wine.ant.home}\lib\ant.jar;${wine.ant.home}\lib\ant-launcher.jar;${wine.ant.home}\lib\ant-junit.jar " />
				<arg value="-Dsvn.version=${svn.version}" />
				<arg value="org.apache.tools.ant.launch.Launcher" />
				<arg value="@{target}" />
			</exec>
		</sequential>
	</macrodef>

	<macrodef name="all-plugins">
		<attribute name="target" />
		<sequential>
			<buildFeature destDir="${dist.dir}" projectName="${feature.project}" workspace="${workspace.dir}" buildPluginTarget="@{target}" skipBuildFeature="true" targetPlatformLocation="${target.eclipse.dir}/eclipse" />
		</sequential>
	</macrodef>
</project>
